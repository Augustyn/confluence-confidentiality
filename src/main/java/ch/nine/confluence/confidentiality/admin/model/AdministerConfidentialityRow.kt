package ch.nine.confluence.confidentiality.admin.model

import javax.xml.bind.annotation.XmlAccessType
import javax.xml.bind.annotation.XmlAccessorType
import javax.xml.bind.annotation.XmlElement
import javax.xml.bind.annotation.XmlRootElement

/**
 * Simple transport object, that holds information about confidentiality configuration option
 * for JavaScript part of the plugin. Used for admin confidentiality rest table allowing
 * editing confidentiality options for space
 */
@XmlRootElement
@XmlAccessorType(XmlAccessType.FIELD)
class AdministerConfidentialityRow(private val id: Int, private val confidentiality: String) {
    constructor(): this(0, "")

    /**
     * The id must be such that its Javascript representation results in a boolean true rather than false â€” in particular, 0 is not valid;
     * It is not reflected in any way in the table, but it is used to identify records;
     * The id is generated by the server and then returned to the client as part of the object of the created vault entry.
     */
    @XmlElement(name = "id")
    fun getId(): Int {
        return id
    }

    @XmlElement(name = "confidentiality")
    fun getConfidentiality() : String {
        return confidentiality
    }

}